import React from 'react';
import Link from 'next/link';
import { WeightCell } from '@/components/shared/WeightCell';
import AgeCell from '@/components/shared/AgeCell';  // ‚Üê √öJ IMPORT
import { displayEnar } from '@/constants/enar-formatter';

// TypeScript t√≠pusok
interface Animal {
    id: string;
    enar: string;
    name?: string; 
    szuletesi_datum: string;
    kategoria: string;
    ivar: string;
    statusz: string;
    current_weight?: number;
    last_weight_measured_at?: string;
    notes?: string;
    // H√°rem-specifikus mez≈ëk
    harem_start_date?: string;
    pairing_date?: string;
    assigned_at?: string;
    vv_date?: string;
    vv_result?: 'vemhes' | 'ures' | 'csira';
    expected_birth_date?: string;
    birth_date?: string;
    // Tov√°bbi mez≈ëk...
    pregnancy_status?: string;
}

interface AnimalTableProps {
    animals: Animal[];
    selectedAnimals: string[];
    onToggleAnimal: (id: string) => void;
    onSelectAll: () => void;
    onClearSelection: () => void;
    handleAnimalClick: (animal: Animal) => void;
}

// Seg√©dfunkci√≥k
const getSafeKey = (animal: Animal, index: number): string => {
    if (animal.id && animal.id !== 'NaN' && animal.id !== '') {
        return `${animal.id}-${index}`;
    }
    if (animal.enar) {
        return `enar-${animal.enar}-${index}`;
    }
    return `fallback-${index}-${Math.random().toString(36).substr(2, 9)}`;
};

const addDays = (date: Date, days: number): string => {
    const result = new Date(date);
    result.setDate(result.getDate() + days);
    return result.toLocaleDateString('hu-HU');
};

const formatDate = (dateString?: string): string => {
    if (!dateString) return '-';
    return new Date(dateString).toLocaleDateString('hu-HU');
};

// üëë H√ÅREM T√ÅBL√ÅZAT - HIBRID: Eredeti design + Sticky columns + AgeCell
export const HaremAnimalTable: React.FC<AnimalTableProps> = ({
    animals, 
    selectedAnimals, 
    onToggleAnimal, 
    onSelectAll, 
    onClearSelection, 
    handleAnimalClick
}) => {
    return (
        <div className="bg-white shadow-sm rounded-lg overflow-hidden">
            {/* ‚úÖ EGYSZER≈∞ SCROLL CONTAINER - Sticky n√©lk√ºl */}
            <div className="overflow-x-auto">
                <table className="table-auto w-full divide-y divide-gray-200">
                    {/* ‚úÖ NORM√ÅL HEADER - Sticky elt√°vol√≠tva */}
                    <thead className="bg-gray-50">
                        <tr>
                            {/* ‚úÖ NORM√ÅL CHECKBOX OSZLOP */}
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <input
                                    type="checkbox"
                                    checked={selectedAnimals.length === animals.length && animals.length > 0}
                                    onChange={() => selectedAnimals.length === animals.length ? onClearSelection() : onSelectAll()}
                                    className="rounded border-gray-300"
                                />
                            </th>
                            
                            {/* ‚úÖ NORM√ÅL ENAR OSZLOP */}
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üè∑Ô∏è ENAR
                            </th>
                            
                            {/* ‚úÖ NORM√ÅL OSZLOPOK - Eredeti c√≠mek √©s m√©ret, minden funkci√≥ megmarad */}
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üìõ N√©v
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üíï H√°rem kezdete
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üî¨ VV tervezett
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                ‚úÖ VV eredm√©ny
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üçº V√°rhat√≥ ell√©s
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üéÇ √âletkor
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                ‚öñÔ∏è UTOLS√ì M√âR√âS
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                üìù Feljegyz√©s
                            </th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                ‚öôÔ∏è M≈±veletek
                            </th>
                        </tr>
                    </thead>
                    <tbody className="bg-white divide-y divide-gray-200">
                        {animals.map((animal, index) => {
                            // ‚úÖ √âLETKOR SZ√ÅM√çT√ÅS EGYSZER (VV logik√°hoz sz√ºks√©ges!)
                            const birthDate = animal.szuletesi_datum || animal.birth_date;
                            let ageInMonths = 0;
                            if (birthDate) {
                                const birth = new Date(birthDate);
                                const today = new Date();
                                ageInMonths = Math.floor((today.getTime() - birth.getTime()) / (1000 * 60 * 60 * 24 * 30.44));
                            }

                            // ‚úÖ VV INTELLIGENS LOGIKA (eredeti √ºzleti logika 100% megtartva!)
                            const vvPlanned = (() => {
                                // 1. Csak n≈ëivarokra (ivar ellen≈ërz√©s)
                                if (animal.ivar !== 'n≈ëivar' && animal.ivar !== 'n≈ë') {
                                    return '-';
                                }

                                // 2. Csak 24+ h√≥napos √°llatokra (√©letkor ellen≈ërz√©s)
                                if (ageInMonths > 0 && ageInMonths < 24) {
                                    return '-';
                                }

                                // 3. 24+ h√≥napos n≈ëivarokra sz√°m√≠tjuk a VV-t
                                if (animal.vv_date) {
                                    return formatDate(animal.vv_date);
                                }

                                if (animal.pairing_date) {
                                    return addDays(new Date(animal.pairing_date), 75);
                                }

                                if (animal.assigned_at) {
                                    return addDays(new Date(animal.assigned_at), 75);
                                }

                                return '-';
                            })();

                            const isClickable = animal.enar && (animal.enar.includes('/') || animal.enar.startsWith('temp-'));

                            return (
                                <tr 
                                    key={getSafeKey(animal, index)}
                                    className={`hover:bg-gray-50 transition-colors ${
                                        selectedAnimals.includes(animal.id) ? 'bg-blue-50' : ''
                                    } ${isClickable ? 'cursor-pointer' : ''}`}
                                    onClick={isClickable ? () => handleAnimalClick(animal) : undefined}
                                >
                                    {/* ‚úÖ NORM√ÅL CHECKBOX */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        <input
                                            type="checkbox"
                                            checked={selectedAnimals.includes(animal.id)}
                                            onChange={() => onToggleAnimal(animal.id)}
                                            className="rounded border-gray-300"
                                        />
                                    </td>
                                    
                                    {/* ‚úÖ NORM√ÅL ENAR */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        {isClickable ? (
                                            <span className="text-orange-600 font-medium cursor-pointer hover:text-orange-800">
                                                üêÆ {displayEnar(animal.enar)}
                                            </span>
                                        ) : (
                                            <Link 
                                                href={`/dashboard/animals/${encodeURIComponent(animal.enar)}`} 
                                                className="text-blue-600 hover:text-blue-800 font-medium"
                                            >
                                                {displayEnar(animal.enar)}
                                            </Link>
                                        )}
                                    </td>
                                    
                                    {/* ‚úÖ NORM√ÅL CELL√ÅK - Eredeti m√©ret √©s design, minden funkci√≥ el√©rhet≈ë */}
                                    
                                    {/* N√âV */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium">
                                        {animal.name || '-'}
                                    </td>
                                    
                                    {/* H√ÅREM KEZDETE */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        {formatDate(animal.harem_start_date)}
                                    </td>
                                    
                                    {/* VV TERVEZETT - Komplex √ºzleti logika */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium text-blue-600">
                                        {vvPlanned}
                                    </td>
                                    
                                    {/* VV EREDM√âNY - Eredeti badge-ek */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        {animal.vv_result ? (
                                            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                                                animal.vv_result === 'vemhes' ? 'bg-green-100 text-green-800' :
                                                animal.vv_result === 'ures' ? 'bg-red-100 text-red-800' :
                                                'bg-yellow-100 text-yellow-800'
                                            }`}>
                                                {animal.vv_result === 'vemhes' ? 'ü§∞ Vemhes' :
                                                 animal.vv_result === 'ures' ? '‚ùå √úres' : 'üå± Cs√≠ra'}
                                            </span>
                                        ) : (
                                            <span className="text-gray-400">-</span>
                                        )}
                                    </td>
                                    
                                    {/* V√ÅRHAT√ì ELL√âS */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium text-green-600">
                                        {formatDate(animal.expected_birth_date)}
                                    </td>
                                    
                                    {/* ‚úÖ √âLETKOR OSZLOP - AgeCell automatikus sz√≠nez√©ssel */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <AgeCell birthDate={animal.szuletesi_datum || animal.birth_date || ''} />
                                    </td>
                                    
                                    {/* S√öLYM√âR√âS - WeightCell eredeti m√©ret */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <WeightCell 
                                            weight={animal.current_weight} 
                                            lastMeasured={animal.last_weight_measured_at} 
                                        />
                                    </td>
                                    
                                    {/* FELJEGYZ√âS */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        {animal.notes || '-'}
                                    </td>
                                    
                                    {/* M≈∞VELETEK */}
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <button 
                                            className="text-gray-400 hover:text-gray-600 p-2 rounded-lg hover:bg-gray-100 transition-colors"
                                            title="M≈±veletek"
                                            onClick={(e) => {
                                                e.stopPropagation();
                                                alert('üîß M≈±veletek men√º hamarosan el√©rhet≈ë!');
                                            }}
                                        >
                                            <span className="text-lg">‚ãØ</span>
                                        </button>
                                    </td>
                                </tr>
                            );
                        })}
                    </tbody>
                </table>
            </div>
            
            {/* ‚úÖ EMPTY STATE - Eredeti m√©ret */}
            {animals.length === 0 && (
                <div className="text-center py-12">
                    <div className="text-gray-400 text-lg mb-2">üëë</div>
                    <div className="text-gray-500">Nincs √°llat ebben a h√°rem kar√°mban</div>
                </div>
            )}
        </div>
    );
};