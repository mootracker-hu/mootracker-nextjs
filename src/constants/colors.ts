// src/constants/colors.ts
/**
 * üé® MooTracker - Sz√≠nk√≥dok √©s Design System
 * Minden sz√≠n konstans egy helyen - konzisztens megjelen√©s
 */

import { AGE_CONSTANTS } from './business';

// üè† Kar√°m funkci√≥ sz√≠nek (Tailwind oszt√°lyok)
export const PEN_FUNCTION_COLORS = {
  'b√∂lcsi': 'bg-green-100 text-green-800 border-green-200',
  '√≥vi': 'bg-blue-100 text-blue-800 border-blue-200', 
  'h√°rem': 'bg-pink-100 text-pink-800 border-pink-200',
  'vemhes': 'bg-purple-100 text-purple-800 border-purple-200',
  'ellet≈ë': 'bg-orange-100 text-orange-800 border-orange-200',
  'teh√©n': 'bg-yellow-100 text-yellow-800 border-yellow-200',
  'h√≠z√≥bika': 'bg-red-100 text-red-800 border-red-200',
  '√ºres': 'bg-gray-100 text-gray-800 border-gray-200',
  '√°tmeneti': 'bg-indigo-100 text-indigo-800 border-indigo-200',
  'k√≥rh√°z': 'bg-emerald-100 text-emerald-800 border-emerald-200',
  'karant√©n': 'bg-amber-100 text-amber-800 border-amber-200',
  'selejt': 'bg-slate-100 text-slate-800 border-slate-200'
} as const;

// üìä St√°tusz sz√≠nek
export const STATUS_COLORS = {
  // √Åltal√°nos st√°tuszok
  'active': 'bg-green-100 text-green-800 border-green-200',
  'inactive': 'bg-gray-100 text-gray-800 border-gray-200',
  'pending': 'bg-yellow-100 text-yellow-800 border-yellow-200',
  'error': 'bg-red-100 text-red-800 border-red-200',
  
  // VV eredm√©nyek
  'vemhes': 'bg-green-100 text-green-800 border-green-200',
  'ures': 'bg-red-100 text-red-800 border-red-200', 
  'csira': 'bg-orange-100 text-orange-800 border-orange-200',
  
  // Ell√©si st√°tuszok
  'born': 'bg-blue-100 text-blue-800 border-blue-200',
  'expected': 'bg-purple-100 text-purple-800 border-purple-200',
  'overdue': 'bg-red-100 text-red-800 border-red-200'
} as const;

// üéØ Priorit√°s sz√≠nek
export const PRIORITY_COLORS = {
  'low': 'bg-blue-100 text-blue-800 border-blue-200',
  'medium': 'bg-yellow-100 text-yellow-800 border-yellow-200', 
  'high': 'bg-orange-100 text-orange-800 border-orange-200',
  'critical': 'bg-red-100 text-red-800 border-red-200'
} as const;

// üìÖ √âletkor sz√≠nek
export const AGE_COLORS = {
  // < 12 h√≥nap: fiatal √°llat
  'young': 'text-blue-600',
  // >= 12 h√≥nap: feln≈ëtt √°llat  
  'adult': 'text-gray-600',
  // Speci√°lis esetek
  'newborn': 'text-green-600', // < 1 h√≥nap
  'elderly': 'text-orange-600'  // > 8 √©v
} as const;

// üêÑ Ivar sz√≠nek
export const GENDER_COLORS = {
  'h√≠m': 'text-blue-600',
  'h√≠mivar': 'text-blue-600',
  'n≈ë': 'text-pink-600', 
  'n≈ëivar': 'text-pink-600',
  'unknown': 'text-gray-500'
} as const;

// üè• Kezel√©si t√≠pus sz√≠nek (VAL√ìS ADATOK ALAPJ√ÅN)
export const TREATMENT_COLORS = {
  'megfigyeles': 'bg-blue-100 text-blue-800 border-blue-200'  // Egyetlen haszn√°lt t√≠pus
  // Ezen k√≠v√ºl m√©g nincsenek haszn√°latban:
  // 'gyogykezeles': 'bg-green-100 text-green-800 border-green-200',
  // 'vakcinazas': 'bg-purple-100 text-purple-800 border-purple-200',
  // 'sebezes': 'bg-red-100 text-red-800 border-red-200'
} as const;

// üîí Karant√©n ok sz√≠nek (M√âG NINCS HASZN√ÅLATBAN)
export const QUARANTINE_COLORS = {
  // Jelenleg √ºres - nincs karant√©n metadata a rendszerben
  'uj_allat': 'bg-blue-100 text-blue-800 border-blue-200',
  'betegseg_gyanuja': 'bg-orange-100 text-orange-800 border-orange-200',
  'fertozo_betegseg': 'bg-red-100 text-red-800 border-red-200', 
  'megfigyel√©s': 'bg-yellow-100 text-yellow-800 border-yellow-200'
} as const;

// üì¶ Selejt ok sz√≠nek (VAL√ìS ADATOK ALAPJ√ÅN)
export const CULLING_COLORS = {
  'reprodukcios_problema': 'bg-orange-100 text-orange-800 border-orange-200'  // Egyetlen haszn√°lt ok
  // Ezen k√≠v√ºl m√©g nincsenek haszn√°latban:
  // 'egeszsegugyi_ok': 'bg-red-100 text-red-800 border-red-200',
  // 'alacsony_termekenyseg': 'bg-yellow-100 text-yellow-800 border-yellow-200',
  // 'gazdasagi_ok': 'bg-blue-100 text-blue-800 border-blue-200'
} as const;

// üîÑ √Åtmeneti kar√°m ok sz√≠nek (VAL√ìS ADATOK ALAPJ√ÅN)  
export const TRANSITIONAL_COLORS = {
  'besorol√°s_alatt': 'bg-indigo-100 text-indigo-800 border-indigo-200'  // Egyetlen haszn√°lt ok
  // Ezen k√≠v√ºl m√©g nincsenek haszn√°latban:
  // 'funkci√≥_v√°lt√°s_alatt': 'bg-yellow-100 text-yellow-800 border-yellow-200',
  // 'vizsg√°lat_alatt': 'bg-blue-100 text-blue-800 border-blue-200'
} as const;

// üö® Riaszt√°s sz√≠nek
export const ALERT_COLORS = {
  // Riaszt√°s t√≠pusok
  'vv_due': 'bg-purple-100 text-purple-800 border-purple-200',
  'birth_expected': 'bg-orange-100 text-orange-800 border-orange-200',
  'weight_check': 'bg-blue-100 text-blue-800 border-blue-200',
  'treatment_due': 'bg-green-100 text-green-800 border-green-200',
  'protocol_overdue': 'bg-red-100 text-red-800 border-red-200',
  
  // S√ºrg≈ëss√©gi szintek (3 fokozatos rendszer)
  'KEZDETE': 'bg-blue-50 text-blue-700 border-blue-200',
  'AJANLOTT': 'bg-yellow-50 text-yellow-700 border-yellow-200',
  'SURGOS': 'bg-orange-50 text-orange-700 border-orange-200',
  'OVERDUE': 'bg-red-50 text-red-700 border-red-200',
  
  // Legacy t√°mogat√°s
  'info': 'bg-blue-50 text-blue-700 border-blue-200',
  'warning': 'bg-yellow-50 text-yellow-700 border-yellow-200',
  'urgent': 'bg-orange-50 text-orange-700 border-orange-200',
  'critical': 'bg-red-50 text-red-700 border-red-200'
} as const;

// üé® UI elem sz√≠nek
export const UI_COLORS = {
  // Gombok
  'primary_button': 'bg-green-600 hover:bg-green-700 text-white',
  'secondary_button': 'bg-gray-600 hover:bg-gray-700 text-white',
  'danger_button': 'bg-red-600 hover:bg-red-700 text-white',
  'success_button': 'bg-green-600 hover:bg-green-700 text-white',
  
  // H√°tterek
  'modal_overlay': 'bg-black bg-opacity-50',
  'card_background': 'bg-white border border-gray-200',
  'section_background': 'bg-gray-50 border border-gray-200',
  
  // Sz√∂vegek
  'primary_text': 'text-gray-900',
  'secondary_text': 'text-gray-600', 
  'muted_text': 'text-gray-400',
  'error_text': 'text-red-600',
  'success_text': 'text-green-600'
} as const;

// üì± Responsive sz√≠nek (mobil optimaliz√°l√°s)
export const RESPONSIVE_COLORS = {
  // Mobil sticky header
  'mobile_header': 'bg-white border-b border-gray-200 shadow-sm',
  // Tablet n√©zet
  'tablet_sidebar': 'bg-gray-50 border-r border-gray-200',
  // Desktop hover effektek
  'desktop_hover': 'hover:bg-gray-50 transition-colors'
} as const;

// üîß Helper f√ºggv√©nyek sz√≠nkezel√©shez
export const ColorHelpers = {
  /**
   * Kar√°m funkci√≥ sz√≠n√©nek lek√©rdez√©se
   * @param functionType - Kar√°m funkci√≥ t√≠pusa
   * @returns Tailwind CSS oszt√°lyok stringje
   */
  getPenFunctionColor: (functionType: keyof typeof PEN_FUNCTION_COLORS): string => {
    return PEN_FUNCTION_COLORS[functionType] || PEN_FUNCTION_COLORS['√ºres'];
  },

  /**
   * √âletkor alap√∫ sz√≠n meghat√°roz√°sa  
   * @param ageInMonths - √âletkor h√≥napokban
   * @returns CSS sz√≠n oszt√°ly
   */
  getAgeColor: (ageInMonths: number): string => {
    if (ageInMonths < 1) return AGE_COLORS.newborn;
    if (ageInMonths < AGE_CONSTANTS.YOUNG_ANIMAL_MONTHS) return AGE_COLORS.young; // < 12 h√≥nap
    if (ageInMonths > 96) return AGE_COLORS.elderly; // > 8 √©v
    return AGE_COLORS.adult;
  },

  /**
   * VV eredm√©ny sz√≠n√©nek lek√©rdez√©se
   * @param result - VV eredm√©ny
   * @returns Tailwind CSS oszt√°lyok
   */
  getVVResultColor: (result: 'vemhes' | 'ures' | 'csira'): string => {
    return STATUS_COLORS[result] || STATUS_COLORS.pending;
  },

  /**
   * Riaszt√°s priorit√°s sz√≠n√©nek meghat√°roz√°sa (3 szint≈± rendszer)
   * @param level - Riaszt√°si szint
   * @returns Priorit√°s sz√≠n oszt√°ly
   */
  getAlertLevelColor: (level: 'KEZDETE' | 'AJANLOTT' | 'SURGOS' | 'OVERDUE'): string => {
    return ALERT_COLORS[level] || ALERT_COLORS.info;
  },

  /**
   * Legacy: Riaszt√°s priorit√°s sz√≠n√©nek meghat√°roz√°sa napok alapj√°n
   * @param daysUntilDue - H√°tral√©v≈ë napok
   * @returns Priorit√°s sz√≠n oszt√°ly
   */
  getAlertPriorityColor: (daysUntilDue: number): string => {
    if (daysUntilDue < 0) return ALERT_COLORS.critical;
    if (daysUntilDue <= 3) return ALERT_COLORS.urgent;
    if (daysUntilDue <= 7) return ALERT_COLORS.warning;
    return ALERT_COLORS.info;
  },

  /**
   * Ivar alap√∫ sz√≠n
   * @param gender - √Ållat ivara
   * @returns CSS sz√≠n oszt√°ly
   */
  getGenderColor: (gender: string): string => {
    const normalizedGender = gender.toLowerCase() as keyof typeof GENDER_COLORS;
    return GENDER_COLORS[normalizedGender] || GENDER_COLORS.unknown;
  },

  /**
   * Protokoll st√°tusz sz√≠n (business.ts-b≈ël √°tj√∂v≈ë objektumhoz)
   * @param protocolStatus - BusinessHelpers.getCalfProtocolStatus() eredm√©nye
   * @returns A megfelel≈ë sz√≠n oszt√°ly
   */
  getProtocolStatusColor: (protocolStatus: { level: 'KEZDETE' | 'AJANLOTT' | 'SURGOS' | 'OVERDUE' }): string => {
    return ColorHelpers.getAlertLevelColor(protocolStatus.level);
  }
} as const;

// üöÄ Export t√≠pusok
export type PenFunctionColorKey = keyof typeof PEN_FUNCTION_COLORS;
export type StatusColorKey = keyof typeof STATUS_COLORS;
export type PriorityColorKey = keyof typeof PRIORITY_COLORS;
export type AlertColorKey = keyof typeof ALERT_COLORS;
export type AlertLevel = 'KEZDETE' | 'AJANLOTT' | 'SURGOS' | 'OVERDUE';